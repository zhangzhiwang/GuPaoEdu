<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  
  <!-- 
  	下面分别配置了Spring的ContextLoaderListener和mvc的DispatcherServlet，那么谁先被加载呢？
  	*根据servlet规范，加载顺序是listener -> filter -> servlet，但是在加载listener之前会先初始化全局的ServletContext，后续在web.xml里面加载的所有部分都将共享这个上下文。
   -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <!-- 配置Spring的ContextLoaderListener
  	   一个项目要想使用Spring框架就必须在web.xml中配置ContextLoaderListener，该类继承了ContextLoader并实现了ServletContextListener接口
  	   1、ContextLoader的作用：在应用程序启动的时候初始化ioc容器。该类有一个属性叫contextConfigLocation，需要外部进行配置，所以上面配置了contextConfigLocation，具体可以参考ContextLoaderListener无參构造器上面的注释，这也就是为什么要在<context-param>里面配置ContextLoaderListener。
  	   2、ServletContextListener接口的作用：将初始化好的ioc容器放在具有全局生命周期的ServletContext里面，这样只要能获取到Servlet就能拿到ioc容器，从而得到里面的bean
   -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:springmvc.xml</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>springmvc</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
